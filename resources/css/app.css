@import 'tailwindcss';

@plugin '@tailwindcss/forms';

@source '../../vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php';

@custom-variant dark (&:is(.dark *));

@theme {
  --shadow-inner-white-top: inset 0 1px 0 rgba(255, 255, 255, 0.15);

  --color-neutral-850: #1d1d1d;

  --color-primary-50: #f0f9ff;
  --color-primary-100: #e0f2fe;
  --color-primary-200: #bae6fd;
  --color-primary-300: #7dd3fc;
  --color-primary-400: #38bdf8;
  --color-primary-500: #0ea5e9;
  --color-primary-600: #0284c7;
  --color-primary-700: #0369a1;
  --color-primary-800: #075985;
  --color-primary-900: #0c4a6e;
  --color-primary-950: #082f49;
}

@utility container {
  @apply mx-auto px-4 md:px-6;
  max-width: calc(var(--breakpoint-2xl) + (--spacing(6)));
  nav & {
    padding-top: env(safe-area-inset-top);
  }
}

@utility btn {
  @apply inline-flex items-center px-4 py-2 rounded-md font-medium border text-center text-sm;
  @apply focus:outline-hidden focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 dark:focus:ring-offset-neutral-900;

  &:disabled {
    @apply opacity-75 pointer-events-none;
  }

  &.disabled {
    @apply opacity-75 pointer-events-none;
  }
}

@utility btn-lg {
  @apply px-6 py-3 text-base;
}

@utility btn-sm {
  @apply px-2 py-1;
}

@utility btn-focus {
  /* Used to apply a .btn-like focus state to an element */
  @apply rounded-md focus:outline-hidden focus-visible:ring-2 focus-visible:ring-primary-500 focus-visible:ring-offset-2 dark:focus-visible:ring-offset-neutral-900;
}

@utility disabled {
  & .btn {
    @apply opacity-75 pointer-events-none;
  }
}

@utility btn-primary {
  @apply text-white bg-linear-to-b from-primary-400 to-primary-500 border-primary-600 text-shadow-px-primary;
  @apply dark:from-primary-500 dark:to-primary-600 dark:border-primary-700;
  box-shadow:
    0 1px 2px 0 rgba(0, 0, 0, 0.05),
    0 1px 0 0 rgba(255, 255, 255, 0.1) inset;
  &:hover {
    @apply from-primary-500 to-primary-600 border-primary-700;
    @apply dark:from-primary-400 dark:to-primary-600 dark:border-primary-600;
  }
  &:active {
    @apply bg-none bg-primary-600 border-primary-700;
    box-shadow:
      0 1px 2px 0 rgba(0, 0, 0, 0.05),
      0 1px 0 0 rgba(0, 0, 0, 0.1) inset;
  }
}

@utility btn-primary-active {
  @apply bg-none bg-primary-600 border-primary-700;
  box-shadow:
    0 1px 2px 0 rgba(0, 0, 0, 0.05),
    0 1px 0 0 rgba(0, 0, 0, 0.1) inset;
}

@utility btn-secondary {
  @apply text-slate-700 bg-linear-to-b from-white to-slate-50 border-slate-300;
  @apply dark:text-neutral-100 dark:from-neutral-700 dark:to-neutral-800 dark:border-neutral-600;
  box-shadow:
    0 1px 2px 0 rgba(0, 0, 0, 0.05),
    0 1px 0 0 rgba(255, 255, 255, 0.1) inset;
  &:hover {
    @apply from-slate-100 to-slate-200 border-slate-400;
    @apply dark:from-neutral-600 dark:to-neutral-800 dark:border-neutral-500;
  }
  &:active {
    @apply bg-none bg-slate-200 border-slate-400;
    @apply dark:bg-neutral-800 dark:border-neutral-700;
    box-shadow:
      0 1px 2px 0 rgba(0, 0, 0, 0.05),
      0 1px 0 0 rgba(0, 0, 0, 0.1) inset;
  }
}

@utility btn-secondary-active {
  @apply bg-none bg-slate-200 border-slate-400;
  @apply dark:bg-neutral-800 dark:border-neutral-700;
  box-shadow:
    0 1px 2px 0 rgba(0, 0, 0, 0.05),
    0 1px 0 0 rgba(0, 0, 0, 0.1) inset;
}

@utility btn-destructive {
  @apply text-white bg-linear-to-b from-red-400 to-red-500 border-red-600 focus:ring-red-500 text-shadow-px-red;
  @apply dark:from-red-500 dark:to-red-600 dark:border-red-700;
  box-shadow:
    0 1px 2px 0 rgba(0, 0, 0, 0.05),
    0 1px 0 0 rgba(255, 255, 255, 0.1) inset;
  &:hover {
    @apply from-red-500 to-red-600 border-red-700;
    @apply dark:from-red-400 dark:to-red-600 dark:border-red-600;
  }
  &:active {
    @apply bg-none bg-red-600 border-red-700;
    box-shadow:
      0 1px 2px 0 rgba(0, 0, 0, 0.05),
      0 1px 0 0 rgba(0, 0, 0, 0.1) inset;
  }
}

@utility btn-destructive-active {
  @apply bg-none bg-red-600 border-red-700;
  box-shadow:
    0 1px 2px 0 rgba(0, 0, 0, 0.05),
    0 1px 0 0 rgba(0, 0, 0, 0.1) inset;
}

@utility btn-icon {
  @apply p-2 rounded-full text-sm focus:outline-hidden focus:ring-2 focus:ring-offset-2;
  @apply text-primary-600 hover:bg-slate-200 focus:bg-slate-200 focus:ring-primary-500;
  @apply dark:text-primary-500 dark:hover:bg-neutral-800 dark:focus:bg-neutral-800 dark:focus:ring-primary-600;
}

@utility input-text {
  @apply focus:ring-primary-500 focus:border-primary-500 block w-full sm:text-sm border-slate-300 dark:bg-neutral-850/50 dark:border-neutral-700 dark:focus:border-primary-500 shadow-xs rounded-md placeholder-slate-500 dark:placeholder-neutral-500;
}

@utility input-checkbox {
  @apply focus:ring-current h-4 w-4 text-primary-500 border-slate-300 rounded-sm checked:border-primary-600 checked:hover:border-primary-600 checked:shadow-inner-white-top;
  @apply dark:bg-neutral-800 dark:ring-offset-neutral-900 dark:border-neutral-600 dark:checked:bg-current dark:checked:border-primary-600;
}

@utility form-label {
  @apply block text-sm font-semibold text-slate-700 dark:text-neutral-300;
}

@utility dark {
  & [data-tooltip] {
    --tooltip-bg: --theme(--color-neutral-800 / 90%);
  }
}

@utility tooltip-left {
  &[data-tooltip]::before {
    @apply translate-x-[calc(-50%+1.5rem)] origin-bottom-right;
  }
}

@utility tooltip-right {
  &[data-tooltip]::before {
    @apply -translate-x-6 origin-bottom-left;
  }
}

@utility tooltip-center {
  &[data-tooltip]::before {
    @apply translate-x-0 origin-bottom;
  }
}

@utility text-shadow-px-primary {
  text-shadow: 0 1px 0 var(--color-primary-600);
}

@utility text-shadow-px-red {
  text-shadow: 0 1px 0 var(--color-red-600);
}

@utility actually-break-words {
  /* For some reason overflow-wrap on its own isn't breaking some long words in video links and I am tired of trying to figure out how to fix it correctly. Non-standard word-break value works perfectly. */
  overflow-wrap: break-word;
  word-break: break-word;
}

@layer base {
    html, body {
        height: 100%;
    }
    body {
        padding-bottom: env(safe-area-inset-bottom);
    }
}

@layer components {
    [data-tooltip]:not([data-tooltip="false"]) {
        --tooltip-bg: --theme(--color-slate-800 / 90%);
        position: relative;
        &::before,
        &::after {
            @apply absolute z-40 pointer-events-none opacity-0 scale-90 transition;
        }
        &::before {
            content: attr(aria-label);
            @apply max-w-xs text-white py-1 px-2 rounded-sm shadow-xs font-normal text-sm whitespace-nowrap origin-bottom;
            background-color: var(--tooltip-bg);
            bottom: calc(100% + 0.3rem);
            left: 50%;
            transform: translateX(-50%);
        }
        &::after {
            content: '';
            @apply origin-top -translate-x-1/2;
            bottom: calc(100% - 0.3rem);
            left: 50%;
            border-width: 0.35rem;
            border-color: var(--tooltip-bg) transparent transparent transparent;
        }
        &:hover::before,
        &:hover::after,
        &:focus::before,
        &:focus::after {
            @apply visible ring-0 ring-transparent ring-offset-0 ring-offset-transparent opacity-100 scale-100;
        }
    }

    nav-menu[v-cloak] {
        @apply md:flex flex-1;
    }
    @media (max-width: --theme(--breakpoint-sm)) {
        nav-menu[v-cloak] {
            display: none !important;
        }
    }

    * {
        @apply ring-offset-slate-50 dark:ring-offset-neutral-900;
    }
}

.px-safe {
    padding-left: env(safe-area-inset-left);
    padding-right: env(safe-area-inset-right);
}
